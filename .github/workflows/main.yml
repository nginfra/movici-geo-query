name: Main

on:
  pull_request:
  push:
    branches:
      - master
      - main
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

env:
  BOOST_DIR: "boost/boost"
  BOOST_VERSION: 1_79_0

jobs:
  black:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Build and install
        run: |
          pip install black

      - name: Run black
        run: |
          black --check .
  
  flake8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Build and install
        run: |
          pip install flake8

      - name: Run Flake8
        run: |
          make flake8
  
  tests-c:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install boost
        run: |
          sudo apt-get update && sudo apt-get install -y libboost-dev

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12

      - name: Test C-code
        run: |
          mkdir -p build
          cd build
          cmake ..
          make -j
          ./test
          cd ..

  build-wheels-and-test:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "cp38-manylinux_x86_64"
          - os: ubuntu-latest
            python-version: "cp39-manylinux_x86_64"
          - os: ubuntu-latest
            python-version: "cp310-manylinux_x86_64"
          - os: windows-latest
            python-version: "cp38-win_amd64"
          - os: windows-latest
            python-version: "cp39-win_amd64"
          - os: windows-latest
            python-version: "cp310-win_amd64"

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Boost
        uses: ./.github/actions/install-boost
        with:
          os: ${{ matrix.os }}
          boost-dir: ${{ env.BOOST_DIR }}
      
      
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.8.0
        env:
          CIBW_BUILD: ${{ matrix.python-version }}
          CIBW_ENVIRONMENT: BOOST_DIR=${{ env.BOOST_DIR }}
          CIBW_BEFORE_TEST: pip install pytest
          CIBW_TEST_COMMAND: pytest {project}/tests/python
        with:
          output-dir: dist/

      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*
          name: 'distributions'
  
  build-sdist:
    # if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    env:
      SDIST_FORMATS: gztar
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install build dependencies
        run: |
          pip install pybind11

      - name: Build source distribution
        run: |
          python setup.py sdist --formats ${SDIST_FORMATS} --dist-dir dist/

      - uses: actions/upload-artifact@v3
        with:
          path: ./dist/*
          name: distributions
  
  deploy:
    # We only want to run the deploy job if we've just created a version tag. in `on.push.tags`
    # we've specified to only this workflow on specific tags (and the main branch and pull
    # requests), so here we only need to check if we've been triggered from a tag
    # if: startsWith(github.ref, 'refs/tags')
    environment: Test PyPI
    runs-on: ubuntu-latest
    needs: [build-wheels-and-test, build-sdist]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: distributions
          path: dist/
      
      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository_url: ${{ secrets.PYPI_REPOSITORY_URL }}
      